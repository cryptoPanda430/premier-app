{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\n\nvar IconButton = function IconButton(_ref) {\n  var icon = _ref.icon,\n      size = _ref.size,\n      customStyles = _ref.customStyles,\n      _onPress = _ref.onPress;\n  return React.createElement(TouchableOpacity, {\n    style: customStyles,\n    onPress: function onPress() {\n      return _onPress();\n    }\n  }, React.createElement(View, {\n    style: styles.button\n  }, React.createElement(Text, {\n    style: _objectSpread(_objectSpread({}, styles.icon), {}, {\n      fontSize: size\n    })\n  }, icon)));\n};\n\nvar styles = StyleSheet.create({\n  button: {\n    overflow: 'hidden'\n  },\n  icon: {\n    textAlign: 'center'\n  }\n});\nIconButton.defaultProps = {\n  size: 18,\n  customStyles: {},\n  onPress: undefined\n};\nIconButton.propTypes = {\n  icon: PropTypes.string.isRequired,\n  size: PropTypes.number,\n  customStyles: PropTypes.object,\n  onPress: PropTypes.func\n};\nexport default IconButton;","map":{"version":3,"sources":["E:/Projects/Native/premier-app/src/components/global/ui/IconButton.jsx"],"names":["React","PropTypes","IconButton","icon","size","customStyles","onPress","styles","button","fontSize","StyleSheet","create","overflow","textAlign","defaultProps","undefined","propTypes","string","isRequired","number","object","func"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;;;;AAQA,IAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA,MACfC,IADe,QACfA,IADe;AAAA,MAEfC,IAFe,QAEfA,IAFe;AAAA,MAGfC,YAHe,QAGfA,YAHe;AAAA,MAIfC,QAJe,QAIfA,OAJe;AAAA,SAMf,oBAAC,gBAAD;AACI,IAAA,KAAK,EAAED,YADX;AAEI,IAAA,OAAO,EAAE;AAAA,aAAMC,QAAO,EAAb;AAAA;AAFb,KAII,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC;AAApB,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,kCAAOD,MAAM,CAACJ,IAAd;AAAoBM,MAAAA,QAAQ,EAAEL;AAA9B;AAAX,KACKD,IADL,CADJ,CAJJ,CANe;AAAA,CAAnB;;AAkBA,IAAMI,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC7BH,EAAAA,MAAM,EAAE;AACJI,IAAAA,QAAQ,EAAE;AADN,GADqB;AAI7BT,EAAAA,IAAI,EAAE;AACFU,IAAAA,SAAS,EAAE;AADT;AAJuB,CAAlB,CAAf;AASAX,UAAU,CAACY,YAAX,GAA0B;AACtBV,EAAAA,IAAI,EAAE,EADgB;AAEtBC,EAAAA,YAAY,EAAE,EAFQ;AAGtBC,EAAAA,OAAO,EAAES;AAHa,CAA1B;AAMAb,UAAU,CAACc,SAAX,GAAuB;AACnBb,EAAAA,IAAI,EAAEF,SAAS,CAACgB,MAAV,CAAiBC,UADJ;AAEnBd,EAAAA,IAAI,EAAEH,SAAS,CAACkB,MAFG;AAGnBd,EAAAA,YAAY,EAAEJ,SAAS,CAACmB,MAHL;AAInBd,EAAAA,OAAO,EAAEL,SAAS,CAACoB;AAJA,CAAvB;AAOA,eAAenB,UAAf","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport {\n    StyleSheet,\n    Text,\n    View,\n    TouchableOpacity,\n} from 'react-native'\n\nconst IconButton = ({\n    icon,\n    size,\n    customStyles,\n    onPress,\n}) => (\n    <TouchableOpacity\n        style={customStyles}\n        onPress={() => onPress()}\n    >\n        <View style={styles.button}>\n            <Text style={{ ...styles.icon, fontSize: size }}>\n                {icon}\n            </Text>\n        </View>\n    </TouchableOpacity>\n)\n\nconst styles = StyleSheet.create({\n    button: {\n        overflow: 'hidden',\n    },\n    icon: {\n        textAlign: 'center',\n    },\n})\n\nIconButton.defaultProps = {\n    size: 18,\n    customStyles: {},\n    onPress: undefined,\n}\n\nIconButton.propTypes = {\n    icon: PropTypes.string.isRequired,\n    size: PropTypes.number,\n    customStyles: PropTypes.object,\n    onPress: PropTypes.func,\n}\n\nexport default IconButton\n"]},"metadata":{},"sourceType":"module"}