{"ast":null,"code":"import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { navigationRef } from \"./RootNavigation\";\nimport SceneSplash from \"../scenes/auth/sceneSplash\";\nimport SceneLogin from \"../scenes/auth/sceneLogin\";\nimport SceneHome from \"../scenes/auth/sceneHome\";\nimport SceneSettings from \"../scenes/auth/sceneSettings\";\nimport SceneGameHome from \"../scenes/game/sceneGameHome\";\nvar Stack = createStackNavigator();\n\nvar Navigation = function Navigation(_ref) {\n  var isUserLoggedIn = _ref.isUserLoggedIn;\n  return React.createElement(NavigationContainer, {\n    ref: navigationRef\n  }, React.createElement(Stack.Navigator, {\n    initialRouteName: \"Splash\",\n    screenOptions: {\n      headerShown: false\n    }\n  }, isUserLoggedIn ? React.createElement(React.Fragment, null, React.createElement(Stack.Screen, {\n    name: \"Home\",\n    component: SceneHome\n  }), React.createElement(Stack.Screen, {\n    name: \"Settings\",\n    component: SceneSettings\n  }), React.createElement(Stack.Screen, {\n    name: \"GameHome\",\n    component: SceneGameHome\n  })) : React.createElement(React.Fragment, null, React.createElement(Stack.Screen, {\n    name: \"Splash\",\n    component: SceneSplash\n  }), React.createElement(Stack.Screen, {\n    name: \"Login\",\n    component: SceneLogin\n  }))));\n};\n\nNavigation.propTypes = {\n  isUserLoggedIn: PropTypes.bool.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isUserLoggedIn: state.user.isLoggedIn\n  };\n};\n\nexport default connect(mapStateToProps)(Navigation);","map":{"version":3,"sources":["E:/Projects/Native/premier-app/src/navigation/index.jsx"],"names":["React","connect","PropTypes","NavigationContainer","createStackNavigator","navigationRef","SceneSplash","SceneLogin","SceneHome","SceneSettings","SceneGameHome","Stack","Navigation","isUserLoggedIn","headerShown","propTypes","bool","isRequired","mapStateToProps","state","user","isLoggedIn"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,SAASC,aAAT;AACA,OAAOC,WAAP;AACA,OAAOC,UAAP;AACA,OAAOC,SAAP;AACA,OAAOC,aAAP;AACA,OAAOC,aAAP;AAEA,IAAMC,KAAK,GAAGP,oBAAoB,EAAlC;;AAEA,IAAMQ,UAAU,GAAG,SAAbA,UAAa;AAAA,MAAGC,cAAH,QAAGA,cAAH;AAAA,SACf,oBAAC,mBAAD;AAAqB,IAAA,GAAG,EAAER;AAA1B,KACI,oBAAC,KAAD,CAAO,SAAP;AAAiB,IAAA,gBAAgB,EAAC,QAAlC;AAA2C,IAAA,aAAa,EAAE;AAAES,MAAAA,WAAW,EAAE;AAAf;AAA1D,KACKD,cAAc,GAEX,0CACI,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,MAAnB;AAA0B,IAAA,SAAS,EAAEL;AAArC,IADJ,EAEI,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,UAAnB;AAA8B,IAAA,SAAS,EAAEC;AAAzC,IAFJ,EAGI,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,UAAnB;AAA8B,IAAA,SAAS,EAAEC;AAAzC,IAHJ,CAFW,GASX,0CACI,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,QAAnB;AAA4B,IAAA,SAAS,EAAEJ;AAAvC,IADJ,EAEI,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,OAAnB;AAA2B,IAAA,SAAS,EAAEC;AAAtC,IAFJ,CAVR,CADJ,CADe;AAAA,CAAnB;;AAqBAK,UAAU,CAACG,SAAX,GAAuB;AACnBF,EAAAA,cAAc,EAAEX,SAAS,CAACc,IAAV,CAAeC;AADZ,CAAvB;;AAIA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAA,SAAY;AAChCN,IAAAA,cAAc,EAAEM,KAAK,CAACC,IAAN,CAAWC;AADK,GAAZ;AAAA,CAAxB;;AAIA,eAAepB,OAAO,CAClBiB,eADkB,CAAP,CAEbN,UAFa,CAAf","sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { NavigationContainer } from '@react-navigation/native'\r\nimport { createStackNavigator } from '@react-navigation/stack'\r\nimport { navigationRef } from './RootNavigation'\r\nimport SceneSplash from '../scenes/auth/sceneSplash'\r\nimport SceneLogin from '../scenes/auth/sceneLogin'\r\nimport SceneHome from '../scenes/auth/sceneHome'\r\nimport SceneSettings from '../scenes/auth/sceneSettings'\r\nimport SceneGameHome from '../scenes/game/sceneGameHome'\r\n\r\nconst Stack = createStackNavigator()\r\n\r\nconst Navigation = ({ isUserLoggedIn }) => (\r\n    <NavigationContainer ref={navigationRef}>\r\n        <Stack.Navigator initialRouteName=\"Splash\" screenOptions={{ headerShown: false }}>\r\n            {isUserLoggedIn ? (\r\n                // App Stack\r\n                <>\r\n                    <Stack.Screen name=\"Home\" component={SceneHome} />\r\n                    <Stack.Screen name=\"Settings\" component={SceneSettings} />\r\n                    <Stack.Screen name=\"GameHome\" component={SceneGameHome} />\r\n                </>\r\n            ) : (\r\n                // Auth Stack\r\n                <>\r\n                    <Stack.Screen name=\"Splash\" component={SceneSplash} />\r\n                    <Stack.Screen name=\"Login\" component={SceneLogin} />\r\n                </>\r\n            )}\r\n        </Stack.Navigator>\r\n    </NavigationContainer>\r\n)\r\n\r\nNavigation.propTypes = {\r\n    isUserLoggedIn: PropTypes.bool.isRequired,\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isUserLoggedIn: state.user.isLoggedIn,\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(Navigation)\r\n"]},"metadata":{},"sourceType":"module"}